import requests
import re
from bs4 import BeautifulSoup

# Define the target URL
TARGET_URL = "http://example.com"  # Change to your target URL

# Vulnerability signatures or patterns
SQL_INJECTION_PAYLOADS = [
    "' OR 1=1 --", 
    "' UNION SELECT NULL, NULL, NULL --", 
    "' OR 'a'='a"
]

XSS_PAYLOADS = [
    "<script>alert('XSS')</script>",
    "<img src='x' onerror='alert(1)' />"
]

# Function to perform basic SQL Injection check
def check_sql_injection(url):
    for payload in SQL_INJECTION_PAYLOADS:
        print(f"Testing SQL Injection with payload: {payload}")
        response = requests.get(url + payload)
        if "error" in response.text or "mysql" in response.text or "syntax" in response.text:
            print(f"[!] Potential SQL Injection vulnerability detected at: {url + payload}")
        else:
            print("[+] No SQL Injection vulnerability found")

# Function to perform basic XSS check
def check_xss(url):
    for payload in XSS_PAYLOADS:
        print(f"Testing XSS with payload: {payload}")
        response = requests.get(url + payload)
        if payload in response.text:
            print(f"[!] Potential XSS vulnerability detected at: {url + payload}")
        else:
            print("[+] No XSS vulnerability found")

# Function to check for missing CSRF token in forms
def check_csrf(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    forms = soup.find_all('form')
    for form in forms:
        action = form.get('action', '')
        method = form.get('method', 'get').lower()
        csrf_token = form.find('input', {'name': 'csrf_token'})  # This might vary depending on implementation
        if not csrf_token:
            print(f"[!] CSRF token missing in form at {action} (Method: {method})")
        else:
            print("[+] CSRF token is present in form")

# Function to initiate scanning
def scan_website(url):
    print(f"Starting vulnerability scan on: {url}\n")
    
    # Check for SQL Injection
    check_sql_injection(url)
    
    # Check for XSS vulnerabilities
    check_xss(url)
    
    # Check for CSRF vulnerabilities
    check_csrf(url)
    
    print("\nVulnerability scanning completed.")

# Start scanning
if __name__ == "__main__":
    scan_website(TARGET_URL)
